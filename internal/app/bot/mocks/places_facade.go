// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/nikita5637/quiz-telegram/internal/pkg/model"
	mock "github.com/stretchr/testify/mock"
)

// PlacesFacade is an autogenerated mock type for the PlacesFacade type
type PlacesFacade struct {
	mock.Mock
}

type PlacesFacade_Expecter struct {
	mock *mock.Mock
}

func (_m *PlacesFacade) EXPECT() *PlacesFacade_Expecter {
	return &PlacesFacade_Expecter{mock: &_m.Mock}
}

// GetPlace provides a mock function with given fields: ctx, id
func (_m *PlacesFacade) GetPlace(ctx context.Context, id int32) (model.Place, error) {
	ret := _m.Called(ctx, id)

	var r0 model.Place
	if rf, ok := ret.Get(0).(func(context.Context, int32) model.Place); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(model.Place)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int32) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PlacesFacade_GetPlace_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPlace'
type PlacesFacade_GetPlace_Call struct {
	*mock.Call
}

// GetPlace is a helper method to define mock.On call
//  - ctx context.Context
//  - id int32
func (_e *PlacesFacade_Expecter) GetPlace(ctx interface{}, id interface{}) *PlacesFacade_GetPlace_Call {
	return &PlacesFacade_GetPlace_Call{Call: _e.mock.On("GetPlace", ctx, id)}
}

func (_c *PlacesFacade_GetPlace_Call) Run(run func(ctx context.Context, id int32)) *PlacesFacade_GetPlace_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(int32))
	})
	return _c
}

func (_c *PlacesFacade_GetPlace_Call) Return(_a0 model.Place, _a1 error) *PlacesFacade_GetPlace_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewPlacesFacade interface {
	mock.TestingT
	Cleanup(func())
}

// NewPlacesFacade creates a new instance of PlacesFacade. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPlacesFacade(t mockConstructorTestingTNewPlacesFacade) *PlacesFacade {
	mock := &PlacesFacade{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
